<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<article lang="en" id="git-credential-store(1)">
<articleinfo>
    <title>git-credential-store(1)</title>
<indexterm>
<primary>git-credential-store(1)</primary>
</indexterm>
</articleinfo>
<simplesect id="_name">
<title>NAME</title>
<simpara>git-credential-store - helper to store credentials on disk</simpara>
</simplesect>
<simplesect id="_synopsis">
<title>SYNOPSIS</title>
<screen>git config credential.helper 'store [options]'</screen>
</simplesect>
<simplesect id="_description">
<title>DESCRIPTION</title>
<note><simpara>Using this helper will store your passwords unencrypted on disk,
protected only by filesystem permissions. If this is not an acceptable
security tradeoff, try <xref linkend="git-credential-cache(1)" />, or find a helper
that integrates with secure storage provided by your operating system.</simpara></note>
<simpara>This command stores credentials indefinitely on disk for use by future
git programs.</simpara>
<simpara>You probably don't want to invoke this command directly; it is meant to
be used as a credential helper by other parts of git. See
<xref linkend="gitcredentials(7)" /> or <emphasis>EXAMPLES</emphasis> below.</simpara>
</simplesect>
<simplesect id="_options">
<title>OPTIONS</title>
<variablelist>
<varlistentry>
<term>
--store=&lt;path&gt;
</term>
<listitem>
<simpara>
        Use <emphasis>&lt;path&gt;</emphasis> to store credentials. The file will have its
        filesystem permissions set to prevent other users on the system
        from reading it, but will not be encrypted or otherwise
        protected. Defaults to <emphasis>~/.git-credentials</emphasis>.
</simpara>
</listitem>
</varlistentry>
</variablelist>
</simplesect>
<simplesect id="_examples">
<title>EXAMPLES</title>
<simpara>The point of this helper is to reduce the number of times you must type
your username or password. For example:</simpara>
<screen>$ git config credential.helper store
$ git push http://example.com/repo.git
Username: &lt;type your username&gt;
Password: &lt;type your password&gt;

[several days later]
$ git push http://example.com/repo.git
[your credentials are used automatically]</screen>
</simplesect>
<simplesect id="_storage_format">
<title>STORAGE FORMAT</title>
<simpara>The <emphasis>.git-credentials</emphasis> file is stored in plaintext. Each credential is
stored on its own line as a URL like:</simpara>
<screen>https://user:pass@example.com</screen>
<simpara>When git needs authentication for a particular URL context,
credential-store will consider that context a pattern to match against
each entry in the credentials file.  If the protocol, hostname, and
username (if we already have one) match, then the password is returned
to git. See the discussion of configuration in <xref linkend="gitcredentials(7)" />
for more information.</simpara>
</simplesect>
<simplesect id="_git">
<title>GIT</title>
<simpara>Part of the <xref linkend="git(1)" /> suite</simpara>
</simplesect>
</article>
